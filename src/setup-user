#!/usr/bin/env sh

set -e

# shellcheck source=/dev/null
. "$(dirname "$0")"/utils.sh

if [ "$(id -u)" -eq 0 ]; then
  log_error "This script cannot be run as root. It will call sudo as needed"
  exit 1
fi

log_info "Set gnome & gnome apps configs"
gsettings set "org.gnome.mutter" "experimental-features" "['scale-monitor-framebuffer', 'variable-refresh-rate', 'xwayland-native-scaling']"

gsettings set "org.gnome.desktop.interface" "gtk-theme" "adw-gtk3-dark"
gsettings set "org.gnome.desktop.interface" "color-scheme" "prefer-dark"
gsettings set "org.gnome.desktop.interface" "accent-color" "orange"
gsettings set "org.gnome.desktop.interface" "monospace-font-name" "Cascadia Code 10"

gsettings set "org.gnome.settings-daemon.plugins.color" "night-light-enabled" "true"
gsettings set "org.gnome.settings-daemon.plugins.color" "night-light-temperature" "2500"
gsettings set "org.gnome.settings-daemon.plugins.color" "night-light-schedule-automatic" "false"
gsettings set "org.gnome.settings-daemon.plugins.color" "night-light-schedule-from" "18.0"
gsettings set "org.gnome.settings-daemon.plugins.color" "night-light-schedule-to" "9.0"

gsettings set "org.gnome.Console" "theme" "auto"
gsettings set "org.gnome.Console" "shell" "['/usr/bin/fish']"

gsettings set "org.gnome.desktop.background" "picture-uri" "file:///usr/share/backgrounds/gnome/blobs-l.svg"
gsettings set "org.gnome.desktop.background" "picture-uri-dark" "file:///usr/share/backgrounds/gnome/blobs-d.svg"

gsettings set "org.gnome.desktop.wm.preferences" "button-layout" "appmenu:minimize,maximize,close"

gsettings set "org.gnome.mutter" "center-new-windows" "true"

log_warning "GNOME: Set the legacy gtk theme using gnome-tweaks"
# Install https://github.com/mukul29/legacy-theme-auto-switcher-gnome-extension manually
log_warning "GNOME: \`legacy-theme-auto-switcher-gnome-extension\` must be setup manually"

log_info "Setup flatpak remotes"
flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

log_info "Install flatpak runtimes & apps"
flatpak install --user -y --noninteractive flathub org.gtk.Gtk3theme.adw-gtk3 org.gtk.Gtk3theme.adw-gtk3-dark \
  app.drey.KeyRack ca.desrt.dconf-editor com.bitwarden.desktop \
  com.brave.Browser com.discordapp.Discord com.github.Matoking.protontricks \
  com.github.neithern.g4music com.github.tchx84.Flatseal com.mattjakeman.ExtensionManager \
  com.usebottles.bottles com.valvesoftware.Steam com.vysp3r.ProtonPlus \
  io.github.mrvladus.List io.gitlab.news_flash.NewsFlash net.nokyan.Resources \
  org.gnome.Boxes org.gnome.Calculator org.gnome.Calendar org.gnome.Contacts \
  org.gnome.Loupe org.gnome.Papers org.gnome.Showtime org.gnome.TextEditor \
  org.gnome.seahorse.Application org.libreoffice.LibreOffice org.localsend.localsend_app \
  org.mozilla.firefox org.prismlauncher.PrismLauncher org.raspberrypi.rpi-imager

log_warning "Flatpak: com.github.th_ch.youtube_music must be installed manually"

log_info "Install github packages"
mkdir -v -p "$HOME"/.local/bin/
dra download -i -s "docker-credential-secretservice-v{tag}.linux-amd64" -o "$HOME"/.local/bin/docker-credential-secretservice docker/docker-credential-helpers
dra download -i -s "denotag-x86_64-unknown-linux-gnu.tar.gz" -o "$HOME"/.local/bin/denotag M4RC3L05/denotag
dra download -i -s "doggo_{tag}_Linux_x86_64.tar.gz" -o "$HOME"/.local/bin/doggo mr-karan/doggo
dra download -i -s "kubecolor_{tag}_linux_amd64.tar.gz" -o "$HOME"/.local/bin/kubecolor kubecolor/kubecolor

log_info "Setup dotfiles & configs"
"$(dirname "$0")"/../home/.local/bin/dots apply

log_info "Install VSCode extensions"
code --install-extension denoland.vscode-deno
code --install-extension editorconfig.editorconfig
code --install-extension golang.go
code --install-extension mads-hartmann.bash-ide-vscode
code --install-extension tamasfe.even-better-toml

if ! systemctl --user is-active --quiet podman; then
  log_info "Enable podman service"
  systemctl --user enable --now podman
fi

if ! systemctl --user is-active --quiet syncthing; then
  log_info "Enable syncthing service"
  systemctl --user enable --now syncthing
fi

log_info "Mask gnome ssh agent"
systemctl --user mask gcr-ssh-agent.service
systemctl --user mask gcr-ssh-agent.socket

log_success "User setup completed."
